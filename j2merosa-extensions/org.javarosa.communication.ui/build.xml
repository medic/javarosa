<?xml version="1.0"?>
<project default="package">
	<tstamp/>
	<property name="destination" value="${basedir}/dist/"/>
	<property file="../../j2merosa-libraries/build.properties"/>
	<property name="name" value="j2merosa-communication-ui"/>
	<property name="version" value="1.0"/>
	<exec executable="hg" outputproperty="revision">
		<arg value="tip"/>
		<arg value="--template"/>
		<arg value="{rev}"/>
	</exec>
	<property name="jar" value="${name}-${DSTAMP}.jar"/>
	<target name="init" description="set classpath and make needed directories">
		<mkdir dir="lib/"/>
		<path id="classpath">
			<fileset dir="lib/" includes="*.jar"/>
			<fileset dir="${wtk.home}/lib" includes="${wtk.includes}"/>
			<fileset dir="${polish.home}/import" includes="${polish.includes}"/>
			<fileset dir="../../j2merosa-libraries" includes="*.jar"/>
		</path>
		<mkdir dir="bin/"/>
		<mkdir dir="dist/"/>
	</target>
	<!-- These blocks of polish compliation should almost certainly become centralized somewhere. -->
			<target name="polishCompile" depends="clean,init" description="compile the source with appropriate polish pre and post compilers">
				
				<!-- In order to compile the code properly, we need to use this to hack in the classpath, since using the 
				ref causes a bug in Ant. -->
				<property name="classpathexpanded" refid="classpath"/>
				
				<buildPolish>
					<info name="JavaRosa Logging Library"
						version="1.0"
						description="${app.description}"
						vendorName="OpenRosa Consortium"
						copyright=""
						jarName="${jar}"/>
					
					<deviceRequirements>
						<requirement name="Identifier" value="${polish.targets}"/>
						<and>
						<requirement name="JavaPlatform" value="MIDP/2.0+" />
						<requirement name="JavaConfiguration" value="CLDC/1.1+"/>
						</and>
					</deviceRequirements>

					<build fullscreen="menu" usePolishGui="${javarosa.usepolishui}" preverify="false">
						<!-- Code source files to include in compilation -->
						<!-- All source-level inclusions should be made here -->
						<sources>
							<source dir="src/" />
						</sources>
						
						<!-- Resources that should be used in the Polish build (images, the polish.css file, etc) -->
						<resources dir="../../j2merosa-libraries/resources/" defaultexcludes="no" excludes="readme.txt, .svn, *.css">
							<!-- prevent localization from using the polish libs -->
							<localization>
							    <locale name="none" />
						    </localization>
						</resources>

						<!-- Properties of the actual javac compiler -->
						<compiler debug="on" classpath="${classpathexpanded}"/>

						<postcompiler name="java5" />
						
						<packager executable="jar" arguments="cfM;;${destination}${polish.vendor}-${polish.jarName};;-C;;${polish.packageDir};;."/>
					</build>
				</buildPolish>
			</target>
			<!-- Definition of the J2ME Polish task:                      -->
			<taskdef name="buildPolish" classname="de.enough.polish.ant.PolishTask" classpath="${polish.home}/lib/enough-j2mepolish-build.jar:${polish.home}/lib/jdom.jar"/>

			<target name="packagePolish" depends="polishCompile" description="package polish binary into jar">
				<mkdir dir="../../j2merosa-libraries" />
				<copy todir="../../j2merosa-libraries">
					<fileset dir="dist/" includes="*.jar" />
				</copy>
			</target>
	
	<target name="clean" description="delete dist and bin directories">
		<delete dir="dist/"/>
		<delete dir="bin/"/>
	</target>
	<target name="compile" depends="clean,init" description="compile the source">
		<javac srcdir="src/" destdir="bin/" classpathref="classpath" debug="true" debuglevel="lines,source"/>
	</target>
	<target name="package" depends="compile" description="package binary into jar">
		<jar destfile="dist/${jar}">
			<fileset dir="bin/" includes="**/*.class"/>
		</jar>
		<mkdir dir="../../j2merosa-libraries"/>
		<copy file="dist/${jar}" todir="../../j2merosa-libraries"/>
	</target>
</project>
